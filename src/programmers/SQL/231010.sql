-- 가격대 별 상품 개수 구하기 | X
-- ✅ DTRUNCATE(숫자, 버릴 자릿수), -4면 일의자리부터 4개를 버린다는 것이다.
SELECT TRUNCATE(PRICE, -4) AS PRICE_GROUP, COUNT(PRODUCT_ID) AS PRODUCTS
FROM PRODUCT
GROUP BY PRICE_GROUP
ORDER BY PRICE_GROUP


-- 3월에 태어난 여성 회원 목록 출력하기 | O
SELECT MEMBER_ID, MEMBER_NAME, GENDER, DATE_FORMAT(DATE_OF_BIRTH, '%Y-%m-%d') AS DATE_OF_BIRTH
FROM MEMBER_PROFILE
WHERE GENDER = 'W' AND DATE_OF_BIRTH LIKE '%03%' AND TLNO IS NOT NULL
ORDER BY MEMBER_ID


-- 재구매가 일어난 상품과 회원 리스트 구하기 | X
-- ✅ USER_ID와 PRODUCT_ID별로 묶은 후, 이 정보가 2개 이상인 경우만 HAVING 문으로 추려낸다.
SELECT USER_ID, PRODUCT_ID
FROM ONLINE_SALE
GROUP BY USER_ID, PRODUCT_ID
HAVING COUNT(*) >= 2
ORDER BY USER_ID, PRODUCT_ID DESC;


-- 조건에 부합하는 중고거래 상태 조회하기 | X
-- ✅ CASE문은 반드시 END로 끝나야하며, WHEN 절은 THEN을 꼭 써주어야한다.
SELECT BOARD_ID, 
       WRITER_ID, 
       TITLE, 
       PRICE, 
       CASE 
        WHEN STATUS = 'SALE' THEN '판매중'
        WHEN STATUS = 'RESERVED' THEN '예약중'
        WHEN STATUS = 'DONE' THEN '거래완료'
       END AS STATUS
FROM USED_GOODS_BOARD
WHERE CREATED_DATE LIKE '2022-10-05%'
ORDER BY BOARD_ID DESC


-- 자동차 평균 대여 기간 구하기 | X
-- ✅ 기간을 구하기위해 DATEDIFF를 사용한다. 구한 차에 1을 더해서 평균을 구한 후, ROUND로 소수점 둘째자리에서 반올림해준다.
SELECT CAR_ID, ROUND(AVG(DATEDIFF(END_DATE, START_DATE)+1), 1) AS AVERAGE_DURATION 
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
GROUP BY CAR_ID
-- ✅ HAVING은 그룹화한 후 전체 결과값에 대해 조건을 거는 것이다.
HAVING AVG(DATEDIFF(END_DATE, START_DATE) + 1) >= 7
ORDER BY AVERAGE_DURATION DESC, CAR_ID DESC

